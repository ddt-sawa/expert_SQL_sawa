/*演習7-1 UNIONだけを使うコンペアの改良
使用するテーブル

テーブルA(Table_A)
 table_key | first_column | second_column | third_column
-----------+--------------+---------------+--------------
 A         |            2 |             3 |            4
 B         |            0 |             7 |            9
 C         |            5 |             1 |            6


テーブルB(Table_B)
 table_key | first_column | second_column | third_column
-----------+--------------+---------------+--------------
 A         |            2 |             3 |            4
 B         |            0 |             7 |            9
 C         |            5 |             1 |            6
 
「1.テーブル同士のコンペア---集合の相等性チェック:基本編」(p.124)
のUNIONだけを使うクエリを紹介したとき、これを利用するにはテーブルの行数を調べる
事前準備が必要だと述べました。しかし実は、少し強引な修正を加えることで、
事前準備なしで使えるように改善できます。どんな修正を加えればよいか、考えてみてください。

一つのSQL内で両テーブルの行数を調べてしまえばよいものと思われる。*/

--取得値
SELECT

	--和集合の行数
	COUNT(*) AS row_count,
	
	--テーブルAの行数を調べるサブクエリ
	(
	
		--取得値
		SELECT 
		
			--行数
			COUNT(*)
		
		--参照範囲
		FROM 
		
			--テーブルA
			TABLE_A
	
	--サブクエリによって取得された値をテーブルAの行数とする
	) AS Table_A_Count,
	
	--テーブルBの行数を調べるサブクエリ
	(
	
		--取得値
		SELECT 
		
			--行数
			COUNT(*)
		
		--参照範囲
		FROM 
		
			--テーブルB
			TABLE_B
	
	--サブクエリによって取得された値をテーブルBの行数とする
	) AS Table_B_Count
	
--参照範囲
FROM
	
	--テーブルAとテーブルBの和集合を求めるサブクエリ
	(
		--取得値
		SELECT
		
			--テーブルAの全列
			*
			
		--参照範囲
		FROM
		
			--テーブルA
			Table_A
			
		--和集合を求める
		UNION
		
		
		--取得値
		SELECT
		
			--テーブルBの全列
			*
			
		--参照範囲
		FROM
		
			--テーブルB
			Table_B
			
	--和集合にエイリアスを付ける
	) AS TemporaryTable
;

/*出力
 row_count | table_a_count | table_b_count
-----------+---------------+---------------
         3 |             3 |             3*/
